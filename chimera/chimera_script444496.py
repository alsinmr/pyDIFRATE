try:
	from chimerax.core.commands import run as rc

	import os
	import numpy as np

	di=np.array([1065,1069,1084,1086,1088,1096,1098,1100,1106,1108,\
		1110,1125,1127,1129,1141,1142,1143,1144,1145,1148,\
		1150,1152,1172,1173,1174,1175,1176,1186,1187,1188,\
		1189,1190,1197,1198,1199,1200,1201,1207,1208,1209,\
		1210,1211,1229,1230,1231,1232,1233,1241,1242,1243,\
		1244,1245,1260,1261,1262,1263,1264,1284,1285,1286,\
		1287,1288,1298,1299,1300,1301,1302,1313,1314,1315,\
		1316,1317,1328,1329,1330,1331,1332,1352,1353,1354,\
		1355,1356,1362,1363,1364,1365,1366,1386,1387,1388,\
		1389,1390,1402,1403,1404,1405,1406,1419,1420,1421,\
		1422,1423,1438,1439,1440,1441,1442,1445,1446,1447,\
		1448,1449,1459,1460,1461,1462,1463,1475,1476,1477,\
		1478,1479,1491,1492,1493,1494,1495,1505,1506,1507,\
		1508,1509,1515,1516,1517,1518,1519,1525,1526,1527,\
		1528,1529,1535,1537,1539,1554,1556,1558,1571,1573,\
		1575,1578,1580,1582,1585,1587,1589,1604,1606,1608,\
		1628,1630,1632,1647,1649,1651,1658,1660,1662,1670,\
		1672,1674,1687,1689,1691,1701,1702,1703,1704,1705,\
		1715,1716,1717,1718,1719,1729,1730,1731,1732,1733,\
		1740,1741,1742,1743,1744,1756,1757,1758,1759,1760,\
		1771,1772,1773,1774,1775,1785,1786,1787,1788,1789,\
		1801,1802,1803,1804,1805,1817,1818,1819,1820,1821,\
		1824,1825,1826,1827,1828,1846,1847,1848,1849,1850,\
		1853,1854,1855,1856,1857,1868,1869,1870,1871,1872,\
		1879,1880,1881,1882,1883,1903,1904,1905,1906,1907,\
		1919,1920,1921,1922,1923,1938,1939,1940,1941,1942,\
		1957,1958,1959,1960,1961,1964,1965,1966,1967,1968,\
		1978,1979,1980,1981,1982,1993,1994,1995,1996,1997,\
		2014,2015,2016,2017,2018,2021,2022,2023,2024,2025,\
		2028,2030,2032,2050,2051,2052,2053,2054,2057,2059,\
		2061,2077,2079,2081,2101,2103,2105,2113,2115,2117,\
		2127]).astype("uint32")

	ids=np.array([1141,1142,1143,1144,1172,1173,1174,1175,1186,1187,\
		1188,1189,1197,1198,1199,1200,1207,1208,1209,1210,\
		1229,1230,1231,1232,1241,1242,1243,1244,1260,1261,\
		1262,1263,1284,1285,1286,1287,1298,1299,1300,1301,\
		1313,1314,1315,1316,1328,1329,1330,1331,1352,1353,\
		1354,1355,1362,1363,1364,1365,1386,1387,1388,1389,\
		1402,1403,1404,1405,1419,1420,1421,1422,1438,1439,\
		1440,1441,1445,1446,1447,1448,1459,1460,1461,1462,\
		1475,1476,1477,1478,1491,1492,1493,1494,1505,1506,\
		1507,1508,1515,1516,1517,1518,1525,1526,1527,1528,\
		1701,1702,1703,1704,1715,1716,1717,1718,1729,1730,\
		1731,1732,1740,1741,1742,1743,1756,1757,1758,1759,\
		1771,1772,1773,1774,1785,1786,1787,1788,1801,1802,\
		1803,1804,1817,1818,1819,1820,1824,1825,1826,1827,\
		1846,1847,1848,1849,1853,1854,1855,1856,1868,1869,\
		1870,1871,1879,1880,1881,1882,1903,1904,1905,1906,\
		1919,1920,1921,1922,1938,1939,1940,1941,1957,1958,\
		1959,1960,1964,1965,1966,1967,1978,1979,1980,1981,\
		1993,1994,1995,1996,2014,2015,2016,2017,2021,2022,\
		2023,2024,2050,2051,2052,2053]).astype("uint32")

	r=np.array([0.964512,0.964512,0.964512,0.964512,1.105328,1.105328,1.105328,1.105328,1.078624,1.078624,\
		1.078624,1.078624,1.114272,1.114272,1.114272,1.114272,1.213508,1.213508,1.213508,1.213508,\
		1.155736,1.155736,1.155736,1.155736,1.070736,1.070736,1.070736,1.070736,1.041188,1.041188,\
		1.041188,1.041188,1.067756,1.067756,1.067756,1.067756,1.193344,1.193344,1.193344,1.193344,\
		1.249456,1.249456,1.249456,1.249456,2.480640,2.480640,2.480640,2.480640,1.193568,1.193568,\
		1.193568,1.193568,1.102572,1.102572,1.102572,1.102572,1.046092,1.046092,1.046092,1.046092,\
		0.983216,0.983216,0.983216,0.983216,0.952156,0.952156,0.952156,0.952156,1.031944,1.031944,\
		1.031944,1.031944,0.997324,0.997324,0.997324,0.997324,0.933220,0.933220,0.933220,0.933220,\
		1.020476,1.020476,1.020476,1.020476,1.115356,1.115356,1.115356,1.115356,1.151888,1.151888,\
		1.151888,1.151888,1.259156,1.259156,1.259156,1.259156,1.621240,1.621240,1.621240,1.621240,\
		1.252888,1.252888,1.252888,1.252888,1.102356,1.102356,1.102356,1.102356,1.039492,1.039492,\
		1.039492,1.039492,1.072156,1.072156,1.072156,1.072156,1.088748,1.088748,1.088748,1.088748,\
		1.016996,1.016996,1.016996,1.016996,1.047980,1.047980,1.047980,1.047980,1.072280,1.072280,\
		1.072280,1.072280,1.046388,1.046388,1.046388,1.046388,1.138512,1.138512,1.138512,1.138512,\
		1.231752,1.231752,1.231752,1.231752,1.190120,1.190120,1.190120,1.190120,1.269608,1.269608,\
		1.269608,1.269608,1.183524,1.183524,1.183524,1.183524,1.017012,1.017012,1.017012,1.017012,\
		0.969916,0.969916,0.969916,0.969916,0.968800,0.968800,0.968800,0.968800,0.997640,0.997640,\
		0.997640,0.997640,0.969088,0.969088,0.969088,0.969088,1.098636,1.098636,1.098636,1.098636,\
		0.994992,0.994992,0.994992,0.994992,1.134648,1.134648,1.134648,1.134648,0.980940,0.980940,\
		0.980940,0.980940,1.421240,1.421240,1.421240,1.421240]).astype("float")

	clr=np.array([[207,179,140,255],
		[207,179,140,255],
		[207,179,140,255],
		[207,179,140,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[202,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[195,175,143,254],
		[195,175,143,254],
		[195,175,143,254],
		[195,175,143,254],
		[198,176,142,254],
		[198,176,142,254],
		[198,176,142,254],
		[198,176,142,254],
		[202,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[196,175,142,255],
		[196,175,142,255],
		[196,175,142,255],
		[196,175,142,255],
		[194,174,143,255],
		[194,174,143,255],
		[194,174,143,255],
		[194,174,143,255],
		[139,155,155,255],
		[139,155,155,255],
		[139,155,155,255],
		[139,155,155,255],
		[196,175,142,255],
		[196,175,142,255],
		[196,175,142,255],
		[196,175,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[207,179,140,255],
		[207,179,140,255],
		[207,179,140,255],
		[207,179,140,255],
		[204,177,141,255],
		[204,177,141,255],
		[204,177,141,255],
		[204,177,141,255],
		[205,178,140,255],
		[205,178,140,255],
		[205,178,140,255],
		[205,178,140,255],
		[208,179,140,255],
		[208,179,140,255],
		[208,179,140,255],
		[208,179,140,255],
		[204,178,141,255],
		[204,178,141,255],
		[204,178,141,255],
		[204,178,141,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[198,176,142,255],
		[198,176,142,255],
		[198,176,142,255],
		[198,176,142,255],
		[193,174,143,255],
		[193,174,143,255],
		[193,174,143,255],
		[193,174,143,255],
		[177,169,147,255],
		[177,169,147,255],
		[177,169,147,255],
		[177,169,147,255],
		[194,174,143,255],
		[194,174,143,255],
		[194,174,143,255],
		[194,174,143,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[200,176,142,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[202,177,141,254],
		[202,177,141,254],
		[202,177,141,254],
		[202,177,141,254],
		[201,177,141,255],
		[201,177,141,255],
		[201,177,141,255],
		[201,177,141,255],
		[204,178,141,255],
		[204,178,141,255],
		[204,178,141,255],
		[204,178,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[202,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[203,177,141,255],
		[199,176,142,255],
		[199,176,142,255],
		[199,176,142,255],
		[199,176,142,255],
		[195,174,143,255],
		[195,174,143,255],
		[195,174,143,255],
		[195,174,143,255],
		[197,175,142,255],
		[197,175,142,255],
		[197,175,142,255],
		[197,175,142,255],
		[193,174,143,255],
		[193,174,143,255],
		[193,174,143,255],
		[193,174,143,255],
		[197,175,142,255],
		[197,175,142,255],
		[197,175,142,255],
		[197,175,142,255],
		[204,178,141,255],
		[204,178,141,255],
		[204,178,141,255],
		[204,178,141,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[205,178,140,254],
		[205,178,140,254],
		[205,178,140,254],
		[205,178,140,254],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[201,176,141,255],
		[201,176,141,255],
		[201,176,141,255],
		[201,176,141,255],
		[205,178,140,255],
		[205,178,140,255],
		[205,178,140,255],
		[205,178,140,255],
		[199,176,142,255],
		[199,176,142,255],
		[199,176,142,255],
		[199,176,142,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[206,178,140,255],
		[186,172,145,255],
		[186,172,145,255],
		[186,172,145,255],
		[186,172,145,255]]).astype("uint8")
	mdl=session.open_command.open_data("/Users/albertsmith/Documents/GitHub/pyDIFRATE/Struct/HETs_whole.xtc_50184.pdb")[0]
	session.models.add(mdl)
	rc(session,"~display")
	rc(session,"~ribbon")
	from chimerax.atomic.pbgroup import PseudobondGroup
	pbg_list=list()
	for mdl in session.models:
		if isinstance(mdl,PseudobondGroup):pbg_list.append(mdl)
	for mdl in pbg_list:mdl.delete()
	if len(session.models)>1:
		atoms=session.models[1].atoms
		rc(session,"display #1.1")
	else:
		atoms=session.models[0].atoms
		rc(session,"display #1")
	hide=getattr(atoms,"hides")
	hide[:]=1
	hide[di]=0
	setattr(atoms,"hides",hide)
	rc(session,"style ball")
	rc(session,"size stickRadius 0.2")
	rc(session,"color all tan")
	r0=getattr(atoms,"radii").copy()
	clr0=getattr(atoms,"colors").copy()
	r0[:]=.8
	r0[ids]=r
	clr0[ids]=clr
	setattr(atoms,"radii",r0)
	setattr(atoms,"colors",clr0)
except:
	pass
finally:
	os.remove("/Users/albertsmith/Documents/GitHub/pyDIFRATE/chimera/chimera_script444496.py")
